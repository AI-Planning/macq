
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Domain file automatically generated by the Tarski FSTRIPS writer
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (domain logistics)
    (:requirements :typing)
    (:types
        obj - object
        loc - object
        cit - object
        object
    )

    (:constants
        
    )

    (:predicates
        (package ?x1 - obj)
        (airport ?x1 - loc)
        (at ?x1 - obj ?x2 - loc)
        (city ?x1 - cit)
        (in-city ?x1 - loc ?x2 - cit)
        (in ?x1 - obj ?x2 - obj)
        (location ?x1 - loc)
        (airplane ?x1 - obj)
        (truck ?x1 - obj)
    )

    (:functions
        
    )

    

    
    (:action unload-airplane
     :parameters (?x0 - obj ?x1 - obj ?x2 - loc)
     :precondition (and (package ?x0) (airport ?x2) (airplane ?x1) (location ?x2) (in ?x0 ?x1) (at ?x1 ?x2))
     :effect (and
        (at ?x0 ?x2)
        (not (in ?x0 ?x1)))
    )


    (:action load-truck
     :parameters (?x0 - obj ?x1 - obj ?x2 - loc)
     :precondition (and (package ?x0) (airport ?x2) (truck ?x1) (at ?x0 ?x2) (location ?x2) (at ?x1 ?x2))
     :effect (and
        (in ?x0 ?x1)
        (not (at ?x0 ?x2)))
    )


    (:action unload-truck
     :parameters (?x0 - obj ?x1 - obj ?x2 - loc)
     :precondition (and (package ?x0) (airport ?x2) (truck ?x1) (location ?x2) (in ?x0 ?x1) (at ?x1 ?x2))
     :effect (and
        (at ?x0 ?x2)
        (not (in ?x0 ?x1)))
    )


    (:action fly-airplane
     :parameters (?x0 - obj ?x1 - loc ?x2 - loc)
     :precondition (and (airport ?x2) (at ?x0 ?x1) (location ?x2) (airplane ?x0) (location ?x1) (airport ?x1))
     :effect (and
        (at ?x0 ?x2)
        (not (at ?x0 ?x1)))
    )


    (:action load-airplane
     :parameters (?x0 - obj ?x1 - obj ?x2 - loc)
     :precondition (and (package ?x0) (airport ?x2) (airplane ?x1) (at ?x0 ?x2) (location ?x2) (at ?x1 ?x2))
     :effect (and
        (in ?x0 ?x1)
        (not (at ?x0 ?x2)))
    )


    (:action drive-truck
     :parameters (?x0 - obj ?x1 - loc ?x2 - loc ?x3 - cit)
     :precondition (and (city ?x3) (truck ?x0) (in-city ?x2 ?x3) (airport ?x2) (at ?x0 ?x1) (location ?x2) (location ?x1) (in-city ?x1 ?x3) (airport ?x1))
     :effect (and
        (at ?x0 ?x2)
        (not (at ?x0 ?x1)))
    )

)